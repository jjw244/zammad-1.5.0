I"¡
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.Calendar = (function(superClass) {
    extend(Calendar, superClass);

    function Calendar() {
      return Calendar.__super__.constructor.apply(this, arguments);
    }

    Calendar.configure('Calendar', 'name', 'timezone', 'default', 'business_hours', 'ical_url', 'public_holidays', 'note');

    Calendar.extend(Spine.Model.Ajax);

    Calendar.url = Calendar.apiPath + '/calendars';

    Calendar.configure_attributes = [
      {
        name: 'name',
        display: 'Name',
        tag: 'input',
        type: 'text',
        limit: 100,
        "null": false
      }, {
        name: 'timezone',
        display: 'Time zone',
        tag: 'timezone',
        "null": false
      }, {
        name: 'business_hours',
        display: 'Business Hours',
        tag: 'business_hours',
        "null": true
      }, {
        name: 'ical_url',
        display: 'Holidays iCalendar Feed',
        tag: 'ical_feed',
        placeholder: 'http://example.com/public_holidays.ical',
        "null": true
      }, {
        name: 'public_holidays',
        display: 'Holidays',
        tag: 'holiday_selector',
        "null": true
      }, {
        name: 'note',
        display: 'Note',
        tag: 'textarea',
        limit: 250,
        "null": true
      }, {
        name: 'created_by_id',
        display: 'Created by',
        relation: 'User',
        readonly: 1
      }, {
        name: 'created_at',
        display: 'Created',
        tag: 'datetime',
        readonly: 1
      }, {
        name: 'updated_by_id',
        display: 'Updated by',
        relation: 'User',
        readonly: 1
      }, {
        name: 'updated_at',
        display: 'Updated',
        tag: 'datetime',
        readonly: 1
      }
    ];

    Calendar.prototype.displayName = function() {
      return this.name + " - " + this.timezone;
    };

    Calendar.description = 'Ein **Kalender** wird ben√∂tigt um Eskalationen oder Auswertungen anhand von Gesch√§ftszeiten zu berechnen.\n\nDefinieren Sie einen **"Standard"-Kalender** welcher Systemweit g√ºltig ist. Nur in den angegebenen Gesch√§ftszeiten werden Eskalations-Benachrichtigungen an Agenten versendet.\n\nHaben Sie Kunden f√ºr welche Sie unterschiedliche Gesch√§ftszeiten einhalten m√ºssen, so k√∂nnen Sie mehrere Kalender anlegen. Die Zuweisung zu den Kunden-Tickets geschieht √ºber die **SLAs**.';

    return Calendar;

  })(App.Model);

}).call(this);
:ET